{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\GPL3\\\\point-game\\\\src\\\\Cahier.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { Stage, Layer, Line, Circle } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cahier = ({\n  plateau,\n  setPlateau\n}) => {\n  _s();\n  const n = 40; // Taille de la grille\n  const gridColor = '#cccccc'; // Couleur du quadrillage\n  const stageWidth = 1000; // Largeur de la sc�ne\n  const stageHeight = 700; // Hauteur de la sc�ne\n  const numCols = Math.ceil(stageWidth / n); // Nombre de colonnes\n  const numRows = Math.ceil(stageHeight / n); // Nombre de lignes\n\n  const width = 500;\n  const height = 500;\n  const xInterval = width / n;\n  const yInterval = height / n;\n  const [dernierPoint, setDernierPoint] = useState({\n    x: 0,\n    y: 0\n  });\n\n  // Calcul de l'espacement tr�s proche (0.1 mm)\n  const extraSpacing = 0.25; // en mm\n  const extraGridSize = n * extraSpacing;\n\n  // Position en pixels de la ligne rouge (4�me colonne)\n  const redLineX = 4 * n;\n\n  // Position en pixels de la 3�me derni�re ligne horizontale rouge\n  const thirdLastRowY = (numRows - 2) * n;\n\n  // Fonction pour g�n�rer les lignes horizontales du quadrillage\n  const generateHorizontalLines = () => {\n    let lines = [];\n    for (let i = 0; i <= numRows; i++) {\n      const y = i * n;\n      if (y > thirdLastRowY) {\n        break; // Arr�ter la g�n�ration des lignes horizontales en dessous de la ligne rouge\n      }\n      lines.push( /*#__PURE__*/_jsxDEV(Line, {\n        points: [0, y, stageWidth, y],\n        stroke: gridColor\n      }, `horizontal-${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this));\n    }\n\n    // Ajouter des lignes suppl�mentaires avec un espacement tr�s proche au-dessus de la ligne rouge\n    for (let j = 1; j <= 3; j++) {\n      for (let i = 0; i <= numRows; i++) {\n        const y = i * n + j * extraGridSize;\n        if (y > thirdLastRowY) {\n          break; // Arr�ter la g�n�ration des lignes suppl�mentaires en dessous de la ligne rouge\n        }\n        lines.push( /*#__PURE__*/_jsxDEV(Line, {\n          points: [0, y, stageWidth, y],\n          stroke: gridColor,\n          opacity: 0.5 // Opacit� r�duite pour indiquer qu'elles sont non interactives\n          ,\n          listening: false // D�sactiver l'�coute des �v�nements pour ces lignes\n        }, `horizontal-extra-${j}-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this));\n      }\n    }\n    return lines;\n  };\n\n  // Fonction pour g�n�rer les lignes verticales du quadrillage\n  const generateVerticalLines = () => {\n    let lines = [];\n    // Ajouter la ligne rouge (4�me colonne)\n    lines.push( /*#__PURE__*/_jsxDEV(Line, {\n      points: [redLineX, 0, redLineX, stageHeight],\n      stroke: \"red\"\n    }, `vertical-red`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this));\n\n    // Ajouter les lignes verticales � droite de la ligne rouge\n    for (let i = 0; i <= numCols; i++) {\n      const x = i * n;\n      if (x > redLineX) {\n        lines.push( /*#__PURE__*/_jsxDEV(Line, {\n          points: [x, 0, x, stageHeight],\n          stroke: gridColor\n        }, `vertical-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this));\n      }\n    }\n    return lines;\n  };\n  const handleStageClick = e => {\n    const stage = e.target.getStage();\n    const {\n      x,\n      y\n    } = stage.getPointerPosition();\n    const newX = Math.floor(x / xInterval);\n    const newY = Math.floor(y / yInterval);\n\n    // V�rifier si le clic est � gauche de la ligne rouge verticale\n    if (x * n < redLineX) {\n      // Action � prendre lorsque le clic est � gauche de la ligne rouge\n      console.log('Clic � gauche de la ligne rouge verticale. Op�ration annul�e.');\n      return; // Arr�ter la fonction ici pour emp�cher l'ajout du point\n    }\n\n    // V�rifier si le clic est en dessous de la ligne rouge horizontale\n    if (y * n > thirdLastRowY) {\n      // Action � prendre lorsque le clic est en dessous de la ligne rouge\n      console.log('Clic en dessous de la ligne rouge horizontale. Op�ration annul�e.');\n      return; // Arr�ter la fonction ici pour emp�cher l'ajout du point\n    }\n\n    // Mettre � jour la case correspondante dans la matrice plateau\n    const newPlateau = plateau.map((row, rowIndex) => row.map((value, colIndex) => rowIndex === newY && colIndex === newX ? 1 : value));\n\n    // Mettre � jour l'�tat plateau avec la nouvelle matrice\n    setPlateau(newPlateau);\n\n    // Mettre � jour l'�tat dernierPoint avec les coordonn�es du dernier point\n    setDernierPoint({\n      x: (newX + 0.5) * xInterval,\n      y: (newY + 0.5) * yInterval\n    });\n\n    //console.log(\"click \" + newX + \" \" + newY);\n\n    // Appel de la fonction avec les donn�es � envoyer\n    sendDataToServer(newPlateau, {\n      x: newX,\n      y: newY\n    });\n  };\n  const sendDataToServer = async (plateau, dernierPoint) => {\n    try {\n      //console.log(\"aaaaaaaaaaaaaaa\");\n\n      const response = await axios.put(\"https://localhost:44356/api/Game/ProcessData\", JSON.stringify(dernierPoint),\n      // Convertir en JSON\n      {\n        headers: {\n          'Content-Type': 'application/json' // D�finir le type de contenu\n        }\n      });\n\n      //console.log(response.data);\n      //console.log(\"aaaaaaafsdfsaaa\");\n      //console.log(\"--------------\", typeof(JSON.stringify(plateau)), \"--------------\");\n\n      const response2 = await axios.put(\"https://localhost:44356/api/Game/ProcessMat\", JSON.stringify(plateau),\n      // Convertir en JSON\n      {\n        headers: {\n          'Content-Type': 'application/json' // D�finir le type de contenu\n        }\n      });\n\n      //console.log(\"bbbbbbbbbbbbbbb\");\n      //console.log(response2.data);\n    } catch (error) {\n      console.error('Une erreur s\\'est produite lors de l\\'envoi des donn�es au serveur :', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid-container\",\n    children: /*#__PURE__*/_jsxDEV(Stage, {\n      width: stageWidth,\n      height: stageHeight,\n      onClick: handleStageClick,\n      children: /*#__PURE__*/_jsxDEV(Layer, {\n        children: [generateHorizontalLines(), generateVerticalLines(), /*#__PURE__*/_jsxDEV(Circle, {\n          x: dernierPoint.x,\n          y: dernierPoint.y,\n          radius: 5,\n          fill: \"red\",\n          draggable: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 9\n  }, this);\n};\n_s(Cahier, \"B5hVIB8XKSGJoXzPj0Q3N2Kkrlo=\");\n_c = Cahier;\nexport default Cahier;\nvar _c;\n$RefreshReg$(_c, \"Cahier\");","map":{"version":3,"names":["React","useState","axios","Stage","Layer","Line","Circle","jsxDEV","_jsxDEV","Cahier","plateau","setPlateau","_s","n","gridColor","stageWidth","stageHeight","numCols","Math","ceil","numRows","width","height","xInterval","yInterval","dernierPoint","setDernierPoint","x","y","extraSpacing","extraGridSize","redLineX","thirdLastRowY","generateHorizontalLines","lines","i","push","points","stroke","fileName","_jsxFileName","lineNumber","columnNumber","j","opacity","listening","generateVerticalLines","handleStageClick","e","stage","target","getStage","getPointerPosition","newX","floor","newY","console","log","newPlateau","map","row","rowIndex","value","colIndex","sendDataToServer","response","put","JSON","stringify","headers","response2","error","className","children","onClick","radius","fill","draggable","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Projects/GPL3/point-game/src/Cahier.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Stage, Layer, Line, Circle } from 'react-konva';\r\n\r\nconst Cahier = ({ plateau, setPlateau }) => {\r\n    const n = 40; // Taille de la grille\r\n    const gridColor = '#cccccc'; // Couleur du quadrillage\r\n    const stageWidth = 1000; // Largeur de la sc�ne\r\n    const stageHeight = 700; // Hauteur de la sc�ne\r\n    const numCols = Math.ceil(stageWidth / n); // Nombre de colonnes\r\n    const numRows = Math.ceil(stageHeight / n); // Nombre de lignes\r\n\r\n    const width = 500;\r\n    const height = 500;\r\n    const xInterval = width / n;\r\n    const yInterval = height / n;\r\n    const [dernierPoint, setDernierPoint] = useState({ x: 0, y: 0 });\r\n\r\n\r\n    // Calcul de l'espacement tr�s proche (0.1 mm)\r\n    const extraSpacing = 0.25; // en mm\r\n    const extraGridSize = n * extraSpacing;\r\n\r\n\r\n    // Position en pixels de la ligne rouge (4�me colonne)\r\n    const redLineX = 4 * n;\r\n\r\n    // Position en pixels de la 3�me derni�re ligne horizontale rouge\r\n    const thirdLastRowY = (numRows - 2) * n;\r\n\r\n\r\n    // Fonction pour g�n�rer les lignes horizontales du quadrillage\r\n    const generateHorizontalLines = () => {\r\n        let lines = [];\r\n        for (let i = 0; i <= numRows; i++) {\r\n            const y = i * n;\r\n            if (y > thirdLastRowY) {\r\n                break; // Arr�ter la g�n�ration des lignes horizontales en dessous de la ligne rouge\r\n            }\r\n            lines.push(\r\n                <Line\r\n                    key={`horizontal-${i}`}\r\n                    points={[0, y, stageWidth, y]}\r\n                    stroke={gridColor}\r\n                />\r\n            );\r\n        }\r\n\r\n\r\n\r\n        // Ajouter des lignes suppl�mentaires avec un espacement tr�s proche au-dessus de la ligne rouge\r\n        for (let j = 1; j <= 3; j++) {\r\n            for (let i = 0; i <= numRows; i++) {\r\n                const y = i * n + j * extraGridSize;\r\n                if (y > thirdLastRowY) {\r\n                    break; // Arr�ter la g�n�ration des lignes suppl�mentaires en dessous de la ligne rouge\r\n                }\r\n                lines.push(\r\n                    <Line\r\n                        key={`horizontal-extra-${j}-${i}`}\r\n                        points={[0, y, stageWidth, y]}\r\n                        stroke={gridColor}\r\n                        opacity={0.5} // Opacit� r�duite pour indiquer qu'elles sont non interactives\r\n                        listening={false} // D�sactiver l'�coute des �v�nements pour ces lignes\r\n                    />\r\n                );\r\n            }\r\n        }\r\n        return lines;\r\n    };\r\n\r\n    // Fonction pour g�n�rer les lignes verticales du quadrillage\r\n    const generateVerticalLines = () => {\r\n        let lines = [];\r\n        // Ajouter la ligne rouge (4�me colonne)\r\n        lines.push(\r\n            <Line\r\n                key={`vertical-red`}\r\n                points={[redLineX, 0, redLineX, stageHeight]}\r\n                stroke=\"red\"\r\n            />\r\n        );\r\n\r\n        // Ajouter les lignes verticales � droite de la ligne rouge\r\n        for (let i = 0; i <= numCols; i++) {\r\n            const x = i * n;\r\n            if (x > redLineX) {\r\n                lines.push(\r\n                    <Line\r\n                        key={`vertical-${i}`}\r\n                        points={[x, 0, x, stageHeight]}\r\n                        stroke={gridColor}\r\n                    />\r\n                );\r\n            }\r\n        }\r\n        return lines;\r\n    };\r\n    \r\n    const handleStageClick = (e) => {\r\n        const stage = e.target.getStage();\r\n        const { x, y } = stage.getPointerPosition();\r\n        const newX = Math.floor(x / xInterval);\r\n        const newY = Math.floor(y / yInterval);\r\n\r\n        // V�rifier si le clic est � gauche de la ligne rouge verticale\r\n        if ((x*n) < redLineX) {\r\n            // Action � prendre lorsque le clic est � gauche de la ligne rouge\r\n            console.log('Clic � gauche de la ligne rouge verticale. Op�ration annul�e.');\r\n            return; // Arr�ter la fonction ici pour emp�cher l'ajout du point\r\n        }\r\n\r\n        // V�rifier si le clic est en dessous de la ligne rouge horizontale\r\n        if ((y*n) > thirdLastRowY) {\r\n            // Action � prendre lorsque le clic est en dessous de la ligne rouge\r\n            console.log('Clic en dessous de la ligne rouge horizontale. Op�ration annul�e.');\r\n            return; // Arr�ter la fonction ici pour emp�cher l'ajout du point\r\n        }\r\n\r\n        // Mettre � jour la case correspondante dans la matrice plateau\r\n        const newPlateau = plateau.map((row, rowIndex) =>\r\n            row.map((value, colIndex) => (rowIndex === newY && colIndex === newX ? 1 : value))\r\n        );\r\n\r\n        // Mettre � jour l'�tat plateau avec la nouvelle matrice\r\n        setPlateau(newPlateau);\r\n\r\n        // Mettre � jour l'�tat dernierPoint avec les coordonn�es du dernier point\r\n        setDernierPoint({ x: (newX + 0.5) * xInterval, y: (newY + 0.5) * yInterval });\r\n\r\n        //console.log(\"click \" + newX + \" \" + newY);\r\n\r\n        // Appel de la fonction avec les donn�es � envoyer\r\n        sendDataToServer(newPlateau, { x: newX, y: newY });\r\n    };\r\n\r\n   \r\n\r\n    const sendDataToServer = async (plateau, dernierPoint) => {\r\n        try {\r\n            //console.log(\"aaaaaaaaaaaaaaa\");\r\n\r\n            const response = await axios.put(\"https://localhost:44356/api/Game/ProcessData\",\r\n                JSON.stringify(dernierPoint), // Convertir en JSON\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json' // D�finir le type de contenu\r\n                    }\r\n                }\r\n            );\r\n\r\n            //console.log(response.data);\r\n            //console.log(\"aaaaaaafsdfsaaa\");\r\n            //console.log(\"--------------\", typeof(JSON.stringify(plateau)), \"--------------\");\r\n\r\n            const response2 = await axios.put(\"https://localhost:44356/api/Game/ProcessMat\",\r\n                JSON.stringify(plateau), // Convertir en JSON\r\n                {\r\n                    headers: {\r\n                        'Content-Type': 'application/json' // D�finir le type de contenu\r\n                    }\r\n                }\r\n            );\r\n\r\n            //console.log(\"bbbbbbbbbbbbbbb\");\r\n            //console.log(response2.data);\r\n\r\n        } catch (error) {\r\n            console.error('Une erreur s\\'est produite lors de l\\'envoi des donn�es au serveur :', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"grid-container\">\r\n            <Stage width={stageWidth} height={stageHeight} onClick={handleStageClick} >\r\n                <Layer>\r\n                    {/* Quadrillage horizontal */}\r\n                    {generateHorizontalLines()}\r\n                    {/* Quadrillage vertical */}\r\n                    {generateVerticalLines()}\r\n                    {/* Point */}\r\n                    <Circle\r\n                        x={dernierPoint.x}\r\n                        y={dernierPoint.y}\r\n                        radius={5}\r\n                        fill=\"red\"\r\n                        draggable\r\n                    />\r\n                </Layer>\r\n            </Stage>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Cahier;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}