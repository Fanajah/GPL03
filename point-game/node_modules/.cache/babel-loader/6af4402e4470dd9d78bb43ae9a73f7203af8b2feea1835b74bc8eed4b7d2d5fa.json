{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\GPL3\\\\point-game\\\\src\\\\Page.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Stage, Layer, Line, Circle } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Page = ({\n  numRows,\n  numCols\n}) => {\n  _s();\n  const width = 800;\n  const height = 600;\n  const marginTop = 50;\n  const marginBottom = 50;\n  const marginLeft = 50;\n  const marginRight = 50;\n  const scale = width / numRows > height / numCols ? Math.floor(height / numCols) : Math.floor(width / numRows); // �chelle pour les graduations\n\n  const [points, setPoints] = useState([]); // �tat pour les points\n  const [mousePos, setMousePos] = useState({\n    x: 0,\n    y: 0\n  }); // �tat pour la position de la souris\n\n  // G�rer le mouvement de la souris\n  const handleMouseMove = event => {\n    let {\n      x,\n      y\n    } = event.target.getStage().getPointerPosition();\n    setMousePos({\n      x,\n      y\n    });\n  };\n  const renderHorizontalLines = () => {\n    const lines = [];\n    for (let i = 0; i <= numRows; i++) {\n      lines.push( /*#__PURE__*/_jsxDEV(Line, {\n        points: [0, marginTop + i * scale, width, marginTop + i * scale],\n        stroke: \"#ddd\"\n      }, `hline${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this));\n    }\n    return lines;\n  };\n  const renderVerticalLines = () => {\n    const lines = [];\n    for (let i = 0; i <= numCols; i++) {\n      lines.push( /*#__PURE__*/_jsxDEV(Line, {\n        points: [marginLeft + i * scale, 0, marginLeft + i * scale, height],\n        stroke: \"#ddd\"\n      }, `vline${i}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this));\n    }\n    return lines;\n  };\n\n  // Calculer l'intersection la plus proche\n  const getClosestIntersection = (x, y) => {\n    const closestX = Math.round((x - marginLeft) / scale) * scale;\n    const closestY = Math.round((y - marginTop) / scale) * scale;\n    console.log(`Mouse position: x=${x}, y = ${y}`);\n    console.log(`Closest Mouse position: x=${closestX}, y = ${closestY}`);\n    return {\n      x: closestX,\n      y: closestY\n    };\n  };\n  const isValidPoint = (x, y) => {\n    return x > marginLeft && x < width - marginRight && y > marginTop && y < height - marginBottom;\n  };\n\n  // G�rer le clic\n  const handleClick = event => {\n    let {\n      x,\n      y\n    } = event.target.getStage().getPointerPosition();\n    const {\n      x: closestX,\n      y: closestY\n    } = getClosestIntersection(x, y);\n    if (isValidPoint(x, y)) {\n      // Ajouter le point\n      setPoints(prevPoints => [...prevPoints, {\n        x: closestX + marginLeft,\n        y: closestY + marginTop\n      }]);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: marginLeft + width + marginRight,\n    height: marginTop + height + marginBottom,\n    onClick: handleClick,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: [renderHorizontalLines(), renderVerticalLines(), /*#__PURE__*/_jsxDEV(Line, {\n        points: [0, 0, width, 0],\n        stroke: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        points: [0, 0, 0, height],\n        stroke: \"black\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), points.map((point, index) => /*#__PURE__*/_jsxDEV(Circle, {\n        x: marginLeft + point.x,\n        y: marginTop + point.y,\n        radius: 5,\n        fill: \"red\"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Circle, {\n        x: mousePos.x,\n        y: mousePos.y,\n        radius: 10,\n        fill: \"blue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n// Valeurs par d�faut pour les props\n_s(Page, \"kZJCiIFggrd9HYj0AGORWeKGxqU=\");\n_c = Page;\nPage.defaultProps = {\n  numRows: 6,\n  numCols: 6\n};\nexport default Page;\nvar _c;\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"names":["React","useState","Stage","Layer","Line","Circle","jsxDEV","_jsxDEV","Page","numRows","numCols","_s","width","height","marginTop","marginBottom","marginLeft","marginRight","scale","Math","floor","points","setPoints","mousePos","setMousePos","x","y","handleMouseMove","event","target","getStage","getPointerPosition","renderHorizontalLines","lines","i","push","stroke","fileName","_jsxFileName","lineNumber","columnNumber","renderVerticalLines","getClosestIntersection","closestX","round","closestY","console","log","isValidPoint","handleClick","prevPoints","onClick","children","map","point","index","radius","fill","_c","defaultProps","$RefreshReg$"],"sources":["C:/Users/User/Documents/Projects/GPL3/point-game/src/Page.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Stage, Layer, Line, Circle } from 'react-konva';\r\n\r\nconst Page = ({ numRows, numCols }) => {\r\n    const width = 800;\r\n    const height = 600;\r\n    const marginTop = 50;\r\n    const marginBottom = 50;\r\n    const marginLeft = 50;\r\n    const marginRight = 50;\r\n\r\n    const scale = (width / numRows) > (height / numCols) ? Math.floor(height / numCols) : Math.floor(width / numRows); // �chelle pour les graduations\r\n\r\n    const [points, setPoints] = useState([]); // �tat pour les points\r\n    const [mousePos, setMousePos] = useState({ x: 0, y: 0 }); // �tat pour la position de la souris\r\n\r\n    // G�rer le mouvement de la souris\r\n    const handleMouseMove = (event) => {\r\n        let { x, y } = event.target.getStage().getPointerPosition();\r\n        setMousePos({ x, y });\r\n    };\r\n\r\n    const renderHorizontalLines = () => {\r\n        const lines = [];\r\n        for (let i = 0; i <= numRows; i++) {\r\n            lines.push(\r\n                <Line\r\n                    key={`hline${i}`}\r\n                    points={[0, marginTop + i * scale, width, marginTop + i * scale]}\r\n                    stroke=\"#ddd\"\r\n                />\r\n            );\r\n        }\r\n        return lines;\r\n    };\r\n\r\n    const renderVerticalLines = () => {\r\n        const lines = [];\r\n        for (let i = 0; i <= numCols; i++) {\r\n            lines.push(\r\n                <Line\r\n                    key={`vline${i}`}\r\n                    points={[marginLeft + i * scale, 0, marginLeft + i * scale, height]}\r\n                    stroke=\"#ddd\"\r\n                />\r\n            );\r\n        }\r\n        return lines;\r\n    };\r\n\r\n    // Calculer l'intersection la plus proche\r\n    const getClosestIntersection = (x, y) => {\r\n        const closestX = Math.round((x - marginLeft) / scale) * scale;\r\n        const closestY = Math.round((y - marginTop) / scale) * scale;\r\n        console.log(`Mouse position: x=${x}, y = ${y}`);\r\n        console.log(`Closest Mouse position: x=${closestX}, y = ${closestY}`);\r\n        return { x: closestX, y: closestY };\r\n    };\r\n\r\n    const isValidPoint = (x, y) => {\r\n        return ((x > marginLeft) && (x < width - marginRight) && (y > marginTop) && (y < height - marginBottom));\r\n    }\r\n\r\n    // G�rer le clic\r\n    const handleClick = (event) => {\r\n        let { x, y } = event.target.getStage().getPointerPosition();\r\n        const { x: closestX, y: closestY } = getClosestIntersection(x, y);\r\n\r\n        if (isValidPoint(x, y)) {\r\n            // Ajouter le point\r\n            setPoints((prevPoints) => [...prevPoints, { x: closestX + marginLeft, y: closestY + marginTop }]);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Stage width={marginLeft + width + marginRight} height={marginTop + height + marginBottom} onClick={handleClick} >\r\n            <Layer>\r\n                {renderHorizontalLines()}\r\n                {renderVerticalLines()}\r\n\r\n                {/* Axes */}\r\n                <Line points={[0, 0, width, 0]} stroke=\"black\" />\r\n                <Line points={[0, 0, 0, height]} stroke=\"black\" />\r\n\r\n                {/* Rendu des points */}\r\n                {points.map((point, index) => (\r\n                    <Circle\r\n                        key={index}\r\n                        x={marginLeft + point.x}\r\n                        y={marginTop + point.y}\r\n                        radius={5}\r\n                        fill=\"red\"\r\n                    />\r\n                ))}\r\n\r\n                {/* Cercle qui suit la souris */}\r\n                <Circle\r\n                    x={mousePos.x}\r\n                    y={mousePos.y}\r\n                    radius={10}\r\n                    fill=\"blue\"\r\n                />\r\n            </Layer>\r\n        </Stage>\r\n    );\r\n};\r\n\r\n// Valeurs par d�faut pour les props\r\nPage.defaultProps = {\r\n    numRows: 6,\r\n    numCols: 6,\r\n};\r\n\r\nexport default Page;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}