{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Projects\\\\GPL3\\\\point-game\\\\src\\\\Cahier.js\";\nimport React from 'react';\nimport { Stage, Layer, Line, Text } from 'react-konva';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cahier = () => {\n  // Dimensions du rep�re\n  const width = 500;\n  const height = 500;\n\n  // Graduations et intervalles\n  const xInterval = 50;\n  const yInterval = 50;\n  const xGraduations = Math.floor(width / xInterval);\n  const yGraduations = Math.floor(height / yInterval);\n\n  // Fonction pour cr�er les graduations\n  const createGraduations = (start, end, interval, vertical = false) => {\n    const graduations = [];\n    for (let i = start; i <= end; i += interval) {\n      if (vertical) {\n        graduations.push( /*#__PURE__*/_jsxDEV(Line, {\n          points: [i, 0, i, height],\n          stroke: \"#ccc\",\n          strokeWidth: 1\n        }, `graduation-y-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 34\n        }, this));\n      } else {\n        graduations.push( /*#__PURE__*/_jsxDEV(Line, {\n          points: [0, i, width, i],\n          stroke: \"#ccc\",\n          strokeWidth: 1\n        }, `graduation-x-${i}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 34\n        }, this));\n      }\n    }\n    return graduations;\n  };\n  return /*#__PURE__*/_jsxDEV(Stage, {\n    width: width,\n    height: height,\n    children: /*#__PURE__*/_jsxDEV(Layer, {\n      children: [/*#__PURE__*/_jsxDEV(Line, {\n        points: [0, height / 2, width, height / 2],\n        stroke: \"black\",\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        points: [width / 2, 0, width / 2, height],\n        stroke: \"black\",\n        strokeWidth: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), createGraduations(0, width, xInterval), createGraduations(0, height, yInterval, true), /*#__PURE__*/_jsxDEV(Text, {\n        text: \"0\",\n        x: width / 2 - 5,\n        y: height / 2 + 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        text: \"x\",\n        x: width - 10,\n        y: height / 2 + 5\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        text: \"y\",\n        x: width / 2 + 5,\n        y: 10\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = Cahier;\nexport default Cahier;\nvar _c;\n$RefreshReg$(_c, \"Cahier\");","map":{"version":3,"names":["React","Stage","Layer","Line","Text","jsxDEV","_jsxDEV","Cahier","width","height","xInterval","yInterval","xGraduations","Math","floor","yGraduations","createGraduations","start","end","interval","vertical","graduations","i","push","points","stroke","strokeWidth","fileName","_jsxFileName","lineNumber","columnNumber","children","text","x","y","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Projects/GPL3/point-game/src/Cahier.js"],"sourcesContent":["import React from 'react';\r\nimport { Stage, Layer, Line, Text } from 'react-konva';\r\n\r\nconst Cahier = () => {\r\n    // Dimensions du rep�re\r\n    const width = 500;\r\n    const height = 500;\r\n\r\n    // Graduations et intervalles\r\n    const xInterval = 50;\r\n    const yInterval = 50;\r\n    const xGraduations = Math.floor(width / xInterval);\r\n    const yGraduations = Math.floor(height / yInterval);\r\n\r\n    // Fonction pour cr�er les graduations\r\n    const createGraduations = (start, end, interval, vertical = false) => {\r\n        const graduations = [];\r\n        for (let i = start; i <= end; i += interval) {\r\n            if (vertical) {\r\n                graduations.push(<Line key={`graduation-y-${i}`} points={[i, 0, i, height]} stroke=\"#ccc\" strokeWidth={1} />);\r\n            } else {\r\n                graduations.push(<Line key={`graduation-x-${i}`} points={[0, i, width, i]} stroke=\"#ccc\" strokeWidth={1} />);\r\n            }\r\n        }\r\n        return graduations;\r\n    };\r\n\r\n    return (\r\n        <Stage width={width} height={height}>\r\n            <Layer>\r\n                {/* Axes x et y */}\r\n                <Line points={[0, height / 2, width, height / 2]} stroke=\"black\" strokeWidth={2} />\r\n                <Line points={[width / 2, 0, width / 2, height]} stroke=\"black\" strokeWidth={2} />\r\n\r\n                {/* Graduations sur les axes x et y */}\r\n                {createGraduations(0, width, xInterval)}\r\n                {createGraduations(0, height, yInterval, true)}\r\n\r\n                {/* L�gendes sur les axes x et y */}\r\n                <Text text=\"0\" x={width / 2 - 5} y={height / 2 + 5} />\r\n                <Text text=\"x\" x={width - 10} y={height / 2 + 5} />\r\n                <Text text=\"y\" x={width / 2 + 5} y={10} />\r\n            </Layer>\r\n        </Stage>\r\n    );\r\n};\r\n\r\nexport default Cahier;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}